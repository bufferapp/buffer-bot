{
  "name": "libxml-to-js",
  "version": "0.3.11",
  "main": "./lib/libxml-to-js.js",
  "description": "XML to JavaScript object parser based on libxmljs",
  "dependencies": {
    "libxmljs": ">=0.5.x",
    "lodash": "*"
  },
  "engines": {
    "node": ">=0.4.x"
  },
  "homepage": "https://github.com/SaltwaterC/libxml-to-js",
  "author": {
    "name": "Stefan Rusu",
    "url": "http://www.saltwaterc.eu/"
  },
  "contributors": [
    {
      "name": "Brian White",
      "url": "http://mscdex.net/"
    },
    {
      "name": "Nicolas Morel",
      "url": "https://github.com/Marsup"
    },
    {
      "name": "VirgileD",
      "url": "https://github.com/VirgileD"
    },
    {
      "name": "Richard Anaya",
      "url": "http://www.richardanaya.com/"
    },
    {
      "name": "TokyoIncidents",
      "url": "https://github.com/TokyoIncidents"
    },
    {
      "name": "XApp-Studio",
      "url": "https://github.com/XApp-Studio"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/SaltwaterC/libxml-to-js.git"
  },
  "keywords": [
    "xml",
    "javascript",
    "object",
    "parser",
    "libxml",
    "libxmljs",
    "namespace",
    "cdata",
    "xpath"
  ],
  "scripts": {
    "test": "make test"
  },
  "readme": "## About [![build status](https://secure.travis-ci.org/SaltwaterC/libxml-to-js.png?branch=master)](http://travis-ci.org/SaltwaterC/libxml-to-js) ![still maintained](http://stillmaintained.com/SaltwaterC/libxml-to-js.png)\n\nThis is a XML to JavaScript object parser. It uses the [libxmljs](https://github.com/polotek/libxmljs) module for the actual XML parsing. It aims to be an easy [xml2js](https://github.com/Leonidas-from-XIV/node-xml2js) v1 replacement, but it doesn't follow the xml2js API.\n\nlibxml-to-js uses the string parser method of libxmljs. Basically a modified version of the algorithm from [here](http://mscdex.net/code-snippets/) in order to fit the formal specifications of xml2js output.\n\n## Installation\n\nEither manually clone this repository into your node_modules directory, or the recommended method:\n\n> npm install libxml-to-js\n\nThe installation of the underlying dependency, **libxmljs**, fails if you don't have gcc (or compatible compiler), the [libxml2](http://en.wikipedia.org/wiki/Libxml2) development headers, and the xml2-config script. Under various Linux distributions you may install the appropriate libxml2 development package: libxml2-dev (Debian, Ubuntu, etc), libxml2-devel (RHEL, CentOS, Fedora, etc).\n\n## Usage mode\n\n```javascript\nvar parser = require('libxml-to-js');\nvar xml = 'xml string';\n\nparser(xml, function (error, result) {\n\tif (error) {\n\t\tconsole.error(error);\n\t} else {\n\t\tconsole.log(result);\n\t}\n});\n```\n\nWith XPath query:\n\n```javascript\nparser(xml, '//xpath/query', function (error, result) {\n\tif (error) {\n\t\tconsole.error(error);\n\t} else {\n\t\tconsole.log(result);\n\t}\n});\n```\n\n## Gotcha\n\nDue to the fact that libxmljs does not have any method for returning the namespace attributes of a specific element, the returned namespaces aren't returned as expected:\n\n * the returned namespaces are only the actual used namespaces by the XML document. If there are unused namespaces, they aren't returned. This is a consequence of the fact that the namespaces are pushed into the returned object as they are detected by the parsing recursion.\n * the returned namespaces are attached as attributes to the root element, into the xmlns key in order to keep the code simple.\n\nExample from the WordPress RSS 2 feed:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rss version=\"2.0\"\n\txmlns:content=\"http://purl.org/rss/1.0/modules/content/\"\n\txmlns:wfw=\"http://wellformedweb.org/CommentAPI/\"\n\txmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n\txmlns:atom=\"http://www.w3.org/2005/Atom\"\n\txmlns:sy=\"http://purl.org/rss/1.0/modules/syndication/\"\n\txmlns:slash=\"http://purl.org/rss/1.0/modules/slash/\"\n\t>\n<!-- the rest of the doc -->\n</rss>\n```\n\nis parsed as:\n\n```javascript\n{ '@': \n   { version: '2.0',\n     xmlns: \n      { atom: 'http://www.w3.org/2005/Atom',\n        sy: 'http://purl.org/rss/1.0/modules/syndication/',\n        dc: 'http://purl.org/dc/elements/1.1/',\n        content: 'http://purl.org/rss/1.0/modules/content/',\n        wfw: 'http://wellformedweb.org/CommentAPI/',\n        slash: 'http://purl.org/rss/1.0/modules/slash/' } },\n// the rest of the doc\n}\n```\n\n## Contributors\n\n * @[Brian White](https://github.com/mscdex): The original algorithm for converting a parsed XML doc into JavaScript object.\n * @[Marsup](https://github.com/Marsup): XPath queries support.\n * @[VirgileD](https://github.com/VirgileD): improved text kludge and namespaces support\n * @[Richard Anaya](https://github.com/richardanaya): fix for [#6](https://github.com/SaltwaterC/libxml-to-js/issues/6)\n * @[TokyoIncidents](https://github.com/TokyoIncidents): fixes a couple of global variables leaks [#10](https://github.com/SaltwaterC/libxml-to-js/pull/10)\n * @[XApp-Studio](https://github.com/XApp-Studio): more support for CDATA elements [#13](https://github.com/SaltwaterC/libxml-to-js/issues/13)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/SaltwaterC/libxml-to-js/issues"
  },
  "_id": "libxml-to-js@0.3.11",
  "_from": "libxml-to-js@>=0.3.10"
}
